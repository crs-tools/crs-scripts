#!/bin/bash

[[ -n "$DEBUG" ]] && set -x

SCRIPT_NAME=`basename "$1"`
if [ -z "${SCRIPT_NAME}" ]
then
    echo "no script given."
    echo "usage: `basename $0` <script> [<script params>]"
    exit 1
fi

shift # dont give scriptname as param to script

# these defaults may get overridden
SLEEP_TIME=${SLEEP_TIME:-30}
export HTTPS_CA_DIR=${HTTPS_CA_DIR:-/etc/ssl/certs}

# short sleep time after work has done
SLEEP_TIME_SHORT=2
# long sleep time if no project assigned
SLEEP_TIME_LONG=300

# get path
SCRIPT_PATH=$(readlink $0)
if [ $? -eq 0 ]; then
    SCRIPT_PATH=$(dirname ${SCRIPT_PATH})
else
    SCRIPT_PATH=$(dirname $0)
fi
SCRIPT_PATH=$(dirname ${SCRIPT_PATH})

export PERL5LIB=${SCRIPT_PATH}/lib

# assemble script command
SCRIPT=${SCRIPT_PATH}/scripts/${SCRIPT_NAME}

if [ -z "${CRS_SECRET}" ] || [ -z "${CRS_TOKEN}" ] || [ -z "${CRS_TRACKER}" ]
then
    echo "Required environment variables CRS_SECRET, CRS_TOKEN and/or CRS_TRACKER missing!" >&2
    exit 250
fi

if ! [ -f "${SCRIPT}" ]
then
    echo "selected script (${SCRIPT}) does not exist" >&2
    exit 250
fi

if ! [ -x "${SCRIPT}" ]; then
    echo "selected script (${SCRIPT}) is not executable" >&2
    exit 250
fi

echo "-------------------------------------------"
echo "       CRS Runner v1.0 by FeM 2016"
echo "-------------------------------------------"
echo "    Script:  ${SCRIPT_NAME}"
echo "Sleep time:  ${SLEEP_TIME}s"
echo "-------------------------------------------"

##### BEGIN WHILE LOOP #####
while true
do
    echo "------- executing ${SCRIPT} - talking to tracker instance ${CRS_TRACKER} -------"
    "${SCRIPT}" $@
    EC=$?
    if [ $EC -eq 250 ]
    then
        echo "------- got termination signal, exiting -------"
        exit 250
    elif [ $EC -eq 100 ]
    then
        echo "------- waiting (short) ${SLEEP_TIME_SHORT}s -------"
        sleep ${SLEEP_TIME_SHORT}
    elif [ $EC -eq 200 ]
    then
        echo "------- waiting (long) ${SLEEP_TIME_LONG}s  -------"
        sleep ${SLEEP_TIME_LONG}
    else
        echo "------- waiting ${SLEEP_TIME}s -------"
        sleep ${SLEEP_TIME}
    fi
done
##### END WHILE LOOP #####
